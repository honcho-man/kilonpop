{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"../screens/home\";\nimport TicketsScreen from \"../screens/tickets\";\nimport AccountScreen from \"../screens/account\";\nimport { useFonts, Poppins_500Medium } from '@expo-google-fonts/poppins';\nimport AppLoading from 'expo-app-loading';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar screenOptions = {\n  tabBarStyle: {\n    backgroundColor: '#222222',\n    height: 100,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    borderTopWidth: 0,\n    elevation: 0\n  },\n  tabBarItemStyle: {\n    backgroundColor: 'transparent',\n    marginBottom: 30,\n    marginTop: 30,\n    color: '#fff'\n  },\n  tabBarActiveTintColor: \"white\",\n  tabBarInactiveTintColor: \"#8A8A8A\"\n},\n    sceneContainerStyle = {\n  backgroundColor: '#030303'\n};\nvar homelabelOptions = {\n  tabBarLabelStyle: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 15\n  },\n  tabBarIcon: function tabBarIcon() {\n    return _jsx(Image, {\n      source: require(\"../assets/home.png\")\n    });\n  }\n};\n\nfunction BottomNav() {\n  var _useFonts = useFonts({\n    Poppins_500Medium: Poppins_500Medium\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  return _jsxs(Tab.Navigator, {\n    screenOptions: screenOptions,\n    sceneContainerStyle: sceneContainerStyle,\n    children: [_jsx(Tab.Screen, {\n      name: \"Featured\",\n      component: HomeScreen,\n      options: homelabelOptions\n    }), _jsx(Tab.Screen, {\n      name: \"Ticket\",\n      component: TicketsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Account\",\n      component: AccountScreen\n    })]\n  });\n}\n\nexport default BottomNav;","map":{"version":3,"names":["React","createBottomTabNavigator","HomeScreen","TicketsScreen","AccountScreen","useFonts","Poppins_500Medium","AppLoading","Tab","screenOptions","tabBarStyle","backgroundColor","height","borderTopLeftRadius","borderTopRightRadius","position","left","bottom","right","borderTopWidth","elevation","tabBarItemStyle","marginBottom","marginTop","color","tabBarActiveTintColor","tabBarInactiveTintColor","sceneContainerStyle","homelabelOptions","tabBarLabelStyle","fontFamily","fontSize","tabBarIcon","require","BottomNav","fontsLoaded"],"sources":["C:/Users/DELL/Desktop/kilonpop/components/nav.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Image } from 'react-native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport HomeScreen  from '../screens/home';\r\nimport TicketsScreen  from '../screens/tickets';\r\nimport AccountScreen  from '../screens/account';\r\nimport { useFonts, Poppins_500Medium } from '@expo-google-fonts/poppins';\r\nimport AppLoading from 'expo-app-loading';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst screenOptions = {\r\n  tabBarStyle:{\r\n    backgroundColor:'#222222',\r\n    height: 100,\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    borderTopWidth: 0,\r\n    elevation: 0\r\n  },\r\n  tabBarItemStyle:{\r\n    backgroundColor:'transparent',\r\n    marginBottom: 30,\r\n    marginTop: 30,\r\n    color: '#fff',\r\n  },\r\n  tabBarActiveTintColor: \"white\",\r\n  tabBarInactiveTintColor: \"#8A8A8A\", \r\n},\r\n  sceneContainerStyle = {\r\n    backgroundColor: '#030303',\r\n  };\r\n  var homelabelOptions = {\r\n    tabBarLabelStyle: {\r\n      fontFamily: 'Poppins_500Medium',\r\n      fontSize: 15,\r\n    },\r\n    tabBarIcon: () => ( <Image source={require('../assets/home.png')} /> )\r\n  }\r\n\r\nfunction BottomNav() {\r\n  let [fontsLoaded] = useFonts({\r\n    Poppins_500Medium,\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n\r\n  return (\r\n    <Tab.Navigator {...{screenOptions, sceneContainerStyle}}>\r\n      <Tab.Screen name=\"Featured\" component={HomeScreen} options={homelabelOptions} />\r\n      <Tab.Screen name=\"Ticket\" component={TicketsScreen}  />\r\n      <Tab.Screen name=\"Account\" component={AccountScreen}  />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default BottomNav;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,4BAA5C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,IAAMC,GAAG,GAAGP,wBAAwB,EAApC;AACA,IAAMQ,aAAa,GAAG;EACpBC,WAAW,EAAC;IACVC,eAAe,EAAC,SADN;IAEVC,MAAM,EAAE,GAFE;IAGVC,mBAAmB,EAAE,EAHX;IAIVC,oBAAoB,EAAE,EAJZ;IAKVC,QAAQ,EAAE,UALA;IAMVC,IAAI,EAAE,CANI;IAOVC,MAAM,EAAE,CAPE;IAQVC,KAAK,EAAE,CARG;IASVC,cAAc,EAAE,CATN;IAUVC,SAAS,EAAE;EAVD,CADQ;EAapBC,eAAe,EAAC;IACdV,eAAe,EAAC,aADF;IAEdW,YAAY,EAAE,EAFA;IAGdC,SAAS,EAAE,EAHG;IAIdC,KAAK,EAAE;EAJO,CAbI;EAmBpBC,qBAAqB,EAAE,OAnBH;EAoBpBC,uBAAuB,EAAE;AApBL,CAAtB;AAAA,IAsBEC,mBAAmB,GAAG;EACpBhB,eAAe,EAAE;AADG,CAtBxB;AAyBE,IAAIiB,gBAAgB,GAAG;EACrBC,gBAAgB,EAAE;IAChBC,UAAU,EAAE,mBADI;IAEhBC,QAAQ,EAAE;EAFM,CADG;EAKrBC,UAAU,EAAE;IAAA,OAAQ,KAAC,KAAD;MAAO,MAAM,EAAEC,OAAO;IAAtB,EAAR;EAAA;AALS,CAAvB;;AAQF,SAASC,SAAT,GAAqB;EACnB,gBAAoB7B,QAAQ,CAAC;IAC3BC,iBAAiB,EAAjBA;EAD2B,CAAD,CAA5B;EAAA;EAAA,IAAK6B,WAAL;;EAIA,IAAI,CAACA,WAAL,EAAkB;IAChB,OAAO,KAAC,UAAD,KAAP;EACD;;EAED,OACE,MAAC,GAAD,CAAK,SAAL;IAAoB1B,aAAa,EAAbA,aAApB;IAAmCkB,mBAAmB,EAAnBA,mBAAnC;IAAA,WACE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,UAAjB;MAA4B,SAAS,EAAEzB,UAAvC;MAAmD,OAAO,EAAE0B;IAA5D,EADF,EAEE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,QAAjB;MAA0B,SAAS,EAAEzB;IAArC,EAFF,EAGE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,SAAjB;MAA2B,SAAS,EAAEC;IAAtC,EAHF;EAAA,EADF;AAOD;;AAED,eAAe8B,SAAf"},"metadata":{},"sourceType":"module"}