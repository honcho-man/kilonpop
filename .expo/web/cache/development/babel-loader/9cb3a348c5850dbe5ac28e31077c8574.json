{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport logo from \"./assets/logo.png\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var openImagePickerAsync = function _callee() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted == false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access media is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n            console.log(pickerResult);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: logo,\n      style: styles.logo\n    }), _jsx(Text, {\n      style: styles.instructions,\n      children: \"To share a photo from your phone with a friend, just press the button below!\"\n    }), _jsx(TouchableOpacity, {\n      onPress: openImagePickerAsync,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Pick a photo\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 305,\n    height: 159,\n    marginBottom: 10\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 15,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["StatusBar","logo","ImagePicker","App","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","console","log","styles","container","instructions","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","color","fontSize","marginHorizontal","padding","borderRadius"],"sources":["C:/Users/DELL/Desktop/kilonpop/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport logo from './assets/logo.png';\nimport * as ImagePicker from 'expo-image-picker';\n\nexport default function App() {\n  let openImagePickerAsync = async () => {\n    let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n    if (permissionResult.granted == false) {\n      alert(\"Permission to access media is required!\");\n      return;\n    }\n\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\n    console.log(pickerResult)\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image source={logo} style={styles.logo}/>\n      <Text style={styles.instructions}>To share a photo from your phone with a friend, just press the button below!</Text>\n      <TouchableOpacity\n        onPress={openImagePickerAsync}\n        style={styles.button}>\n        <Text style={styles.buttonText}>Pick a photo</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    width: 305,\n    height: 159,\n    marginBottom: 10\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 15,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  }\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;AAEA,OAAOC,IAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAIC,oBAAoB,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACIF,WAAW,CAACG,mCAAZ,EADJ;;UAAA;YACrBC,gBADqB;;YAAA,MAGrBA,gBAAgB,CAACC,OAAjB,IAA4B,KAHP;cAAA;cAAA;YAAA;;YAIvBC,KAAK,CAAC,yCAAD,CAAL;YAJuB;;UAAA;YAAA;YAAA,iCAQAN,WAAW,CAACO,uBAAZ,EARA;;UAAA;YAQrBC,YARqB;YASzBC,OAAO,CAACC,GAAR,CAAYF,YAAZ;;UATyB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA3B;;EAYA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEG,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,KAAD;MAAO,MAAM,EAAEb,IAAf;MAAqB,KAAK,EAAEY,MAAM,CAACZ;IAAnC,EADF,EAEE,KAAC,IAAD;MAAM,KAAK,EAAEY,MAAM,CAACE,YAApB;MAAA;IAAA,EAFF,EAGE,KAAC,gBAAD;MACE,OAAO,EAAEX,oBADX;MAEE,KAAK,EAAES,MAAM,CAACG,MAFhB;MAAA,UAGE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,UAApB;QAAA;MAAA;IAHF,EAHF;EAAA,EADF;AAWD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADoB;EAO/BtB,IAAI,EAAE;IACJuB,KAAK,EAAE,GADH;IAEJC,MAAM,EAAE,GAFJ;IAGJC,YAAY,EAAE;EAHV,CAPyB;EAY/BX,YAAY,EAAE;IACZY,KAAK,EAAE,MADK;IAEZC,QAAQ,EAAE,EAFE;IAGZC,gBAAgB,EAAE;EAHN,CAZiB;EAiB/Bb,MAAM,EAAE;IACNK,eAAe,EAAE,MADX;IAENS,OAAO,EAAE,EAFH;IAGNC,YAAY,EAAE;EAHR,CAjBuB;EAsB/Bd,UAAU,EAAE;IACVW,QAAQ,EAAE,EADA;IAEVD,KAAK,EAAE;EAFG;AAtBmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}